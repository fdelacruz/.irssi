servers = (
  { address = "irc.stealth.net"; chatnet = "IRCNet"; port = "6668"; },
  { address = "irc.prison.net"; chatnet = "EFNet"; port = "6667"; },
  { address = "eu.undernet.org"; chatnet = "Undernet"; port = "6667"; },
  { 
    address = "irc.slashnet.org";
    chatnet = "Slashnet";
    port = "6667";
  },
  { address = "irc.dal.net"; chatnet = "DALnet"; port = "6667"; },
  { address = "irc.openprojects.net"; chatnet = "OPN"; port = "6667"; },
  { 
    address = "irc.freenode.net";
    chatnet = "FREENODE";
    port = "6667";
  },
  { address = "irc.ptlink.net"; chatnet = "PTlink"; port = "6667"; },
  { address = "silc.silcnet.org"; chatnet = "SILC"; port = "706"; },
  {
    address = "msn.irssi.org";
    chatnet = "bitlbee";
    port = "6667";
    use_ssl = "no";
  },
  {
    address = "localhost";
    chatnet = "myundernet";
    port = "2000";
    use_ssl = "no";
    ssl_verify = "no";
  },
  {
    address = "localhost";
    chatnet = "myfreenode";
    port = "3000";
    use_ssl = "no";
    ssl_verify = "no";
  }
);

chatnets = {
  IRCNet = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "3";
    max_msgs = "5";
    max_whois = "4";
    max_query_chans = "10";
  };
  EFNet = { 
    type = "IRC";
    max_kicks = "4";
    max_modes = "4";
    max_msgs = "3";
  };
  Undernet = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "3";
    max_msgs = "3";
  };
  Slashnet = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "3";
    max_msgs = "3";
  };
  DALNet = { 
    type = "IRC";
    max_kicks = "4";
    max_modes = "6";
    max_msgs = "3";
  };
  OPN = { 
    type = "IRC";
    max_kicks = "1";
    max_modes = "4";
    max_msgs = "100";
  };
  PTLink = {
    type = "IRC";
    max_kicks = "1";
    max_modes = "6";
    max_msgs = "100";
  };
  SILC = { type = "SILC"; };
  FREENODE = { type = "IRC"; };
  bitlbee = { type = "IRC"; };
  myundernet = {
    type = "IRC";
    nick = "slocate";
    username = "_slocate";
    realname = "Just Another IRC Sucka";
  };
  myfreenode = {
    type = "IRC";
    nick = "slocate";
    username = "__slocate";
    realname = "Just Another IRC Sucka";
  };
};

channels = (
  { name = "#irssi"; chatnet = "ircnet"; autojoin = "Yes"; },
  { name = "#debian"; chatnet = "freenode"; autojoin = "No"; },
  { name = "#e"; chatnet = "freenode"; autojoin = "No"; },
  { name = "#macosx"; chatnet = "freenode"; autojoin = "Yes"; },
  { name = "#macports"; chatnet = "freenode"; autojoin = "No"; },
  { name = "#linuxlatino"; chatnet = "Undernet"; autojoin = "yes"; }
);

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "who";
  N = "names";
  M = "msg";
  C = "clear";
  CL = "connect localhost 2000";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi v$J ($V)";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  UPTIME = "eval exec - expr `date +%s` - \\$F | awk '{print \"Irssi uptime: \"int(\\\\\\$1/3600/24)\"d \"int(\\\\\\$1/3600%24)\"h \"int(\\\\\\$1/60%60)\"m \"int(\\\\\\$1%60)\"s\" }'";
  CALC = "exec - if which bc &>/dev/null\\; then echo '$*' | bc | awk '{print \"$*=\"$$1}'\\; else echo bc was not found\\; fi";
  gone = "away not here";
  login_with_X = "msg X@channels.undernet.org login slocate ursula1";
  op_me_X = "msg X@channels.undernet.org op #linuxlatino slocate";
  mX = "msg X@channels.undernet.org";
  mNS = "msg NickServ IDENTIFY ursula1";
  qp = "QUOTE PASS ursula1";
  q = "quote";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb $cumode$N{sbmode $usermode}{sbaway $A}}";
    topic = " $topic";
    info = " Irssi v$J - http://irssi.org/beginner/ - read it to get rid of this";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$T{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]T}";
    prompt_empty = "{prompt $winname}";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always, never (disables the statusbar)
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        usercount = { };
        lag = { priority = "-1"; };
        act = { priority = "10"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # (annoying) infobar requesting new users to visit irssi.org and read
    # a bit of documentation :)
    #    info = {
    #      type = "root";
    #      placement = "bottom";
    #      position = "0";
    #      visible = "always";
    #      items = { mail = { }; loadavg = { }; };
    #    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "active";
      items = {
        barstart = { priority = "100"; };
        topic = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
settings = {
  core = {
    real_name = "Debian User";
    user_name = "slocate";
    nick = "slocate";
    timestamp_format = "%I:%M";
    server_reconnect_time = "300";
  };
  "irc/core" = { alternate_nick = "|slocate"; };
  "fe-common/core" = {
    theme = "slocate";
    timestamps = "yes";
    beep_msg_level = "MSGS NOTICES DCC DCCMSGS";
    autocreate_own_query = "no";
    use_msgs_window = "yes";
    autocreate_query_level = "DCCMSGS";
    reuse_unused_windows = "yes";
    help_path = "/usr/local/share/irssi/help:/home/quico/.irssi/help";
  };
  "perl/core/scripts" = {
    loadavg_min = "0";
    loadavg_refresh = "5";
    mail_file = "/var/mail/quico";
    mail_refresh_time = "5";
    xauth_autostart = "yes";
    xauth_hiddenhost = "yes";
    xauth_autojoin = "no";
  };
  "irc/dcc" = { dcc_autoget = "no"; };
  "fe-text" = { actlist_sort = "refnum"; };
};
logs = { };
